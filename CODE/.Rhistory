knitr::opts_chunk$set(echo = FALSE)
setwd("C:/Users/avining/Documents/Manuscripts/Do Primates Trapline")
#enable easy changes in text size, for tidy LaTeX in pdf
def.chunk.hook  <- knitr::knit_hooks$get("chunk")
knitr::knit_hooks$set(chunk = function(x, options) {
x <- def.chunk.hook(x, options)
ifelse(options$size != "normalsize",
paste0("\n \\", options$size,"\n\n", x, "\n\n \\normalsize"),
x)
})
library(tidyverse)
install.packages(c("admisc", "av", "bayestestR", "cachem", "credentials", "dplyr", "ellipsis", "fda", "geosphere", "gert", "ggdist", "ggVennDiagram", "gifski", "gsl", "hms", "igraph", "insight", "ks", "lhs", "lwgeom", "magick", "manipulateWidget", "mclust", "misc3d", "multicool", "nloptr", "openxlsx", "pbapply", "pcaPP", "plot3D", "plotly", "raster", "rcmdcheck", "RCurl", "rgdal", "rgl", "rhandsontable", "rio", "rlang", "roxygen2", "rversions", "sessioninfo", "stplanr", "survey", "svUnit", "testthat", "Thermimage", "tibble", "tidybayes", "usethis", "vctrs", "VennDiagram", "visNetwork", "zip"))
install.packages(c("admisc", "av", "bayestestR", "cachem", "credentials", "dplyr", "ellipsis", "fda", "geosphere", "gert", "ggdist", "ggVennDiagram", "gifski", "gsl", "hms", "igraph", "insight", "ks", "lhs", "lwgeom", "magick", "manipulateWidget", "mclust", "misc3d", "multicool", "nloptr", "openxlsx", "pbapply", "pcaPP", "plot3D", "plotly", "raster", "rcmdcheck", "RCurl", "rgdal", "rgl", "rhandsontable", "rio", "rlang", "roxygen2", "rversions", "sessioninfo", "stplanr", "survey", "svUnit", "testthat", "Thermimage", "tibble", "tidybayes", "usethis", "vctrs", "VennDiagram", "visNetwork", "zip"))
install.packages(c("admisc", "av", "bayestestR", "cachem", "credentials", "dplyr", "ellipsis", "fda", "geosphere", "gert", "ggdist", "ggVennDiagram", "gifski", "gsl", "hms", "igraph", "insight", "ks", "lhs", "lwgeom", "magick", "manipulateWidget", "mclust", "misc3d", "multicool", "nloptr", "openxlsx", "pbapply", "pcaPP", "plot3D", "plotly", "raster", "rcmdcheck", "RCurl", "rgdal", "rgl", "rhandsontable", "rio", "rlang", "roxygen2", "rversions", "sessioninfo", "stplanr", "survey", "svUnit", "testthat", "Thermimage", "tibble", "tidybayes", "usethis", "vctrs", "VennDiagram", "visNetwork", "zip"))
install.packages(c("admisc", "av", "bayestestR", "cachem", "credentials", "dplyr", "ellipsis", "fda", "geosphere", "gert", "ggdist", "ggVennDiagram", "gifski", "gsl", "hms", "igraph", "insight", "ks", "lhs", "lwgeom", "magick", "manipulateWidget", "mclust", "misc3d", "multicool", "nloptr", "openxlsx", "pbapply", "pcaPP", "plot3D", "plotly", "raster", "rcmdcheck", "RCurl", "rgdal", "rgl", "rhandsontable", "rio", "rlang", "roxygen2", "rversions", "sessioninfo", "stplanr", "survey", "svUnit", "testthat", "Thermimage", "tibble", "tidybayes", "usethis", "vctrs", "VennDiagram", "visNetwork", "zip"))
knitr::opts_chunk$set(echo = FALSE)
setwd("C:/Users/avining/Documents/Manuscripts/Do Primates Trapline")
#enable easy changes in text size, for tidy LaTeX in pdf
def.chunk.hook  <- knitr::knit_hooks$get("chunk")
knitr::knit_hooks$set(chunk = function(x, options) {
x <- def.chunk.hook(x, options)
ifelse(options$size != "normalsize",
paste0("\n \\", options$size,"\n\n", x, "\n\n \\normalsize"),
x)
})
library(tidyverse)
library(rstan)
library(bayesplot)
library(RColorBrewer)
knitr::opts_chunk$set(echo = FALSE)
setwd("C:/Users/avining/Documents/Manuscripts/Do Primates Trapline")
#enable easy changes in text size, for tidy LaTeX in pdf
def.chunk.hook  <- knitr::knit_hooks$get("chunk")
knitr::knit_hooks$set(chunk = function(x, options) {
x <- def.chunk.hook(x, options)
ifelse(options$size != "normalsize",
paste0("\n \\", options$size,"\n\n", x, "\n\n \\normalsize"),
x)
})
library(tidyverse)
library(rstan)
library(bayesplot)
library(RColorBrewer)
data_cleaned <- read_csv("./Results/data_cleaned.csv",col_types = "dccccdddddc")
#log/log transform data to model a power function using linear fit
data_cleaned$Distance_scaled <- log(data_cleaned$Distance)
data_cleaned$Trial_scaled <- log(data_cleaned$Trial)
data_cleaned$Source <- gsub("Learning", "Reinforcement", data_cleaned$Source)
#remove simulation data, data from arrays other than Double Trapezoid, and any individuals that completed fewer than 5 trials
DT_data <- data_cleaned %>% filter(Source == "Experimental", Array == "DT", max(Trial) >= 5)
DT_data$Species <- factor(DT_data$Species)
DT_data$ID <- factor(DT_data$ID)
#plot raw data
ggplot(DT_data) + geom_point(aes(x = Trial_scaled, y = Distance_scaled), alpha = 0.4) +
facet_wrap(~Species)
#Restructure data for STAN analysis.
stan_data <- list(N = nrow(DT_data),
J = length(unique(DT_data$ID)),
K = length(unique(DT_data$Species)),
y = DT_data$Distance_scaled,
x = DT_data$Trial_scaled,
id = as.numeric(DT_data$ID),
sp = as.numeric(DT_data$Species))
load("../Results/power_model_fit0.Rdata")
print(fit0, pars=c("mu_0", "mu_species", "b_0", "b_species", "sigma_e", "lp__"), probs = c(.1, .5,.9)) #summary of results
traceplot(fit0, pars = c("mu_0", "mu_species", "b_0", "b_species", "lp__"), inc_warmup = TRUE) #check convergence, appears strong
#look for estimation anomalies: all posteriors are normally distributed, with appropriate levels of correlation in expected places
pairs(fit0, pars = c("mu_0", "mu_species", "sigma_e"), las = 1)
pairs(fit0, pars = c("b_0", "b_species", "sigma_e"), las = 1)
pairs(fit0, pars = c("mu_0", "mu_species", "b_0", "b_species", "lp__"), las = 1)
#residual analysis
r_bar <- apply(extract(fit0, "pearson_residual")[[1]], MARGIN = 2, mean)
y_pred <- apply(extract(fit0, "y_pred")[[1]], MARGIN = 2, mean)
plot(x = y_pred, y = r_bar) #residuals against prediction
plot(x = stan_data$x, y = r_bar)
plot(x = stan_data$sp, y = r_bar)
qqnorm(r_bar)
